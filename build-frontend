#!/usr/bin/env bash
set -eu -o pipefail
echo -ne '\033]0;FRONTEND\007'
nix-shell -A frontend.env --run 'mkdir -p frontendJs; \
  ghcjs -dedupe -i{common,frontend}/src Main -outputdir dist-frontend-ghcjs -o frontendJs/frontend.jsexe -DGHCJS_GC_INTERVAL=60000 -DGHCJS_BUSY_YIELD=6 -DGHCJS_SCHED_QUANTUM=5 -DUSE_TEMPLATE_HASKELL -O2; \
  if [ -d frontend/src-bin ] ; then
    for x in $(ls frontend/src-bin | sed -n '\''s/\([a-z].*\)\.hs$/\1/p'\'' | grep -vi '\''^main'\''$) ; do \
      ghcjs -dedupe -j4 -i{common,frontend}/src frontend/src-bin/$x.hs -outputdir dist-frontend-ghcjs -o frontendJs/$x.jsexe -DGHCJS_GC_INTERVAL=60000 -DGHCJS_BUSY_YIELD=6 -DGHCJS_SCHED_QUANTUM=5 -DUSE_TEMPLATE_HASKELL; \
    done
  fi'

# GC flags
# If BUSY_YIELD < SCHED_QUANTUM, only one thread ever seems to get to run.
# -DGHCJS_GC_INTERVAL=60000 -DGHCJS_BUSY_YIELD=5 -DGHCJS_SCHED_QUANTUM=5

# Xtreme optimization
# -O2 -fplugin=Reflex.Optimizer -fexpose-all-unfoldings -fspecialise-aggressively

# dump ghc intermediate outputs for analysis
# -dumpdir=dump-js -ddump-to-file -ddump-simpl -ddump-hi -dppr-cols=200 -ddump-rule-firings -dsuppress-all
